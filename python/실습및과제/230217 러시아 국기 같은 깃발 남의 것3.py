import sys
sys.stdin = open('230217 러시아 국기 같은 깃발.txt', 'r')

# 2016년은 삼성전자가 러시아 현지법인을 설립한지 20주년이 된 해이다. 이를 기념해서 당신은 러시아 국기를 만들기로 했다.
# 먼저 창고에서 오래된 깃발을 꺼내왔다. 이 깃발은 N행 M열로 나뉘어 있고, 각 칸은 흰색, 파란색, 빨간색 중 하나로 칠해져 있다.
# 당신은 몇 개의 칸에 있는 색을 다시 칠해서 이 깃발을 러시아 국기처럼 만들려고 한다. 다음의 조건을 만족해야 한다.

# 위에서 몇 줄(한 줄 이상)은 모두 흰색으로 칠해져 있어야 한다.
# 다음 몇 줄(한 줄 이상)은 모두 파란색으로 칠해져 있어야 한다.
# 나머지 줄(한 줄 이상)은 모두 빨간색으로 칠해져 있어야 한다.

# 이렇게 러시아 국기 같은 깃발을 만들기 위해서 새로 칠해야 하는 칸의 개수의 최솟값을 구하여라.
# 첫 번째 예제이다. 왼쪽에 있는 그림이 입력이다. 중간에 있는 그림에 X가 적힌 칸들을 새롭게 색칠하여 오른쪽에 있는 그림과 같은 깃발을 만들면 최적이다.

# [입력]
# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
# 각 테스트 케이스의 첫 번째 줄에는 두 정수 N,M(3≤N,M≤50)이 공백으로 구분되어 주어진다.
# 다음 N개의 줄에는 M개의 문자로 이루어진 문자열이 주어진다. i번 째 줄의 j번째 문자는 깃발에서 i번째 행 j번째 열인 칸의 색을 의미한다.
# ‘W’는 흰색, ‘B’는 파란색, ‘R’은 빨간색을 의미한다. ‘W’, ‘B’, ‘R’외의 다른 문자는 입력되지 않는다.

# 반복문을 사용한 풀이1-브루트포스

T = int(input())
for tc in range(1, T+1):
    N, M = map(int, input().split())            # N행 M열 , 최대 50행 50열 
    arr = [list(input()) for x in range(N)]     # 입력값을 받아서 리스틍에 집어넣음 그리고 N만큼 추가로 만듬
    end = len(arr)                              # 끝을 행렬의 길이로 정한다.
    min_val = 2147483647                        # 최소값을 입력받기위해 입력 최댓값으로 작성

    w_count = 0                                 # 흰색 갯수를 파악, 반복문 밖에 있는 이유는 처음에는 1줄이 흰색인 경우, 다음에는 2줄이 흰색인 경우처럼
    # 넘어가도 그 다음 줄을 추가 해서 더 세면 되는 것이기 때문에 반복할때만다 0으로 굳이 만들필요가 없어서 그렇다. 헷갈리면 디버깅을 해보자.
    for w in range(end-2):                      # 마지막에서 3번째 행까지. 왜냐하면 파란색과 빨간색 각 한줄은 반드시 칠해야하므로.
        for i in range(M):                      # 각 열마다 확인
            if arr[w][i] != 'W':                # 국기의 해당 부분이 W흰색이 아니면
                w_count += 1                    # 흰색으로 바꿔야하니까 w로 교체. 근데 숫자만 셀거라서 교체하지말자.(계속 써먹어야지.)

        b_count = 0                             # 파란색 갯수를 파악
        for b in range(w+1, end-1):             # 흰색 다음 행부터 마지막에서 2번째 행까지. 왜냐하면 마지막 줄에 빨간색 하나는 있어줘야해서.
            for j in range(M):                  # 각 열마다 확인
                if arr[b][j] != 'B':            # 국기의 해당 부분이 B파란색이 아니면
                    b_count += 1                # 파란색으로 바꿔야하니까 B로 교체. 근데 숫자만 셀거라서 교체하지말자.(계속 써먹어야지.)

            # 마지막을 무조건 끝까지 red로 칠해야 한다.
            # 따라서 blue 이후 모든 곳을 red로 칠한 뒤, tmp를 계산해 줘야 한다.
            # w_count, b_count의 경우와 약간 다르다.
            r_count = 0                         # 빨간색 갯수를 파악
            for r in range(b+1, end):           # 파란색 다음 행부터 마지막 행까지. 왜냐면 빨간색이 마지막 행이니까
                for k in range(M):              # 각 열마다 확인
                    if arr[r][k] != 'R':        # 국기의 해당 부분이 R빨간색이 아니면
                        r_count += 1            # 빨간색으로 바꿔야하니까 R로 교체. 근데 숫자만 셀거라서 교체하지말자.(계속 써먹어야지.)

            tmp = w_count + b_count + r_count   # 임시로 총 칸을 바꿔야하는 수를 확인하는 변수
            if min_val > tmp:                   # min_val 보다 tmp가 작은면
                min_val = tmp                   # tmp를 min_val로 변경

    print('#{} {}'.format(tc, min_val))