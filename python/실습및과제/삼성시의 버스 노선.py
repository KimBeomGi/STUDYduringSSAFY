# [문제]
# 삼성시에 있는 5,000개의 버스 정류장은 관리의 편의를 위해 1에서 5,000까지 번호가 붙어 있다.
# 그리고 버스 노선은 N개가 있는데, i번째 버스 노선은 번호가 Ai이상이고,
# Bi이하인 모든 정류장만을 다니는 버스 노선이다.
# P개의 버스 정류장에 대해 각 정류장에 몇 개의 버스 노선이 다니는지 구하는 프로그램을 작성하라.


# [입력]
# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
# 각 테스트 케이스의 첫 번째 줄에는 하나의 정수 N ( 1 ≤ N ≤ 500 )이 주어진다.
# 다음 N개의 줄의 i번째 줄에는 두 정수 Ai, Bi ( 1 ≤ Ai ≤ Bi ≤ 5,000 )가 공백 하나로 구분되어 주어진다.
# 다음 줄에는 하나의 정수 P ( 1 ≤ P ≤ 500 )가 주어진다.
# 다음 P개의 줄의 j번째 줄에는 하나의 정수 Cj ( 1 ≤ Cj ≤ 5,000 ) 가 주어진다.


# [출력]
# 각 테스트 케이스마다 ‘#x’(x는 테스트케이스 번호를 의미하며 1부터 시작한다)를 출력하고 한 칸을 띄운 후,
# 한 줄에 P개의 정수를 공백 하나로 구분하여 출력한다.
# j번째 정수는 Cj번 버스 정류장을 지나는 버스 노선의 개수여야 한다.

# 예)
# 노선은 2개
# 1~3까지 다니는 1번 버스
# 2~5까지 다니는 2번 버스
# 5개의 정류장(P개의 정류장)
# 각 P에 해당하는 정류장 마다 다니는 버스의 갯수

# [문제풀이]
# 1. 버스 정류장 1~5000. 버스 노선 갯수 N개.
# 1-1. i번째 노선은 Ai<= ~ <=Bi 만을 다시는 버스정류장이다.
# 1-2. P개의 버스 정류장에 대해 몇개의 버스 노선이 다니는가?
# 1-2-1. 주어진 P개 중 각 정류장 1번 2번 3번 --- 의 정류장에 버스가 몇 개 다니는지를 확인하고 출력한다. 
# 2. 각 P에 해당하는 정류장 C의 번호를 받아옴.
# 2-1. 각 노선이 정류장 C를 지나는지 확인해야하므로 리스트에 정류장을 담는다.
# 2-2. 각 정류장별 몇 번 지났는지를 확인해야하므로
# 2-3. 우리가 구할 정류장이 담긴 리스트와 동일한 크기의, 0이 담긴 리스트를 생성하고 이용해본다.
# 3. 각 버스 노선에서 자기 버스 정류장에 정차했을 때,
# 3-1. 해당 버스 정류장이 구할 버스 정류장과 동일한 지점이라면
# 3-2. 해당 버스 정류장에 해당하는 값에 +1을 해주자.
# 4. 출력 또한 해당 정류장당 버스 갯수를 출력해야하나, 입력값에 따라 달라지므로 반복문을 이용한다.
# 5. print(~~, end = ' ')을 이용하자


'''
T = int(input())
for testcase in range(1, T+1):
    N = int(input())
    bus_ways = []                                           # 총 버스 댓수와 같이 버스 노선을 담을 리스트 [[],[],[]]
    for i in range(1, N+1):                                 # 각 버스의 노선을 받을 반복문
        bus_way = list(map(int, input().split()))           # 버스 출발지와 종점을 받음
        bus_ways.append(bus_way)                            # 버스 노선을 bus_ways에
# 이제 [[1,3],[2,5]]의 2대의 버스가 있음
    P = int(input())                                        # 구해야할 버스 정류장의 갯수
    C = []                                                  # P개의 정류장에 해당하는 각 정류장 번호를 담는 리스트
    for stop in range(P):                                   # P만큼 입력받아야 하므로
        C_P = int(input())                                  # P에 해당하는 정류장 C를 C_P라 하자(여기서만 사용)
        C.append(C_P)                                       # C 리스트에 입력
# 이제 각 버스 정류장별 거치는 정류장마다 몇 대의 버스 노선이 거치는지 확인하자.
    how_many_bus = [0]*len(C)                               # C리스트 갯수만큼(구할 정류장 만큼) 대입할 카운트를 할 리스트 생성
# bus_ways를 for문 돌리면서 [1,3]에서 1 to 3으로 for문을 돌리고 그 안에서 C에 해당하는 것이 있다면 how_many_bus에서 해당 카운트 +=1
    for bus in bus_ways:                                    # bus_ways를 bus인자로 반복실행.
        for stop in range(bus[0], bus[-1]+1):               # bus의 출발지 부터 종점까지 가보는 것을 구현
            for C_stop_i in range(len(C)):                  # bus의 위치가 C에 들어있는 정류장에 해당하는지를 확인하기 위한 반복문
                if stop == C[C_stop_i]:                     # 만약 해당 버스가 구하려는 버스정류장에 들린다면,
                    how_many_bus[C_stop_i] += 1             # 해당 버스정류장에 들리는 버스 수를 +1 한다.
    print(f'#{testcase}', end = ' ')                        # testcase를 먼저 출력하고 이어서
    for stop_bus_nums in how_many_bus:                      # 반복문을 이용해 how_many_bus안의 인자들을 출력하자
        print(stop_bus_nums, end = ' ')
'''



# [문제풀이]
# 1. 버스 정류장 1~5000. 버스 노선 갯수 N개.
# 1-1. i번째 노선은 Ai<= ~ <=Bi 만을 다시는 버스정류장이다.
# 1-2. P개의 버스 정류장에 대해 몇개의 버스 노선이 다니는가?
# 1-2-1. 주어진 P개 중 각 정류장 1번 2번 3번 --- 의 정류장에 버스가 몇 개 다니는지를 확인하고 출력한다. 
# 2. 각 P에 해당하는 정류장 C의 번호를 받아옴.
# 2-1. 각 노선이 정류장 C를 지나는지 확인해야하므로 리스트에 정류장을 담는다.
# 2-2. 각 정류장별 몇 번 지났는지를 확인해야하므로
# 2-3. 우리가 구할 정류장이 담긴 리스트와 동일한 크기의, 0이 담긴 리스트를 생성하고 이용해본다.
# 3. 각 버스 노선에서 자기 버스 정류장에 정차했을 때,
# 3-1. 해당 버스 정류장이 구할 버스 정류장과 동일한 지점이라면
# 3-2. 해당 버스 정류장에 해당하는 값에 +1을 해주자.
# 4. 출력 또한 해당 정류장당 버스 갯수를 출력해야하나, 입력값에 따라 달라지므로 반복문을 이용한다.
# 5. print(~~, end = ' ')을 이용하자
# 6. 딕셔너리를 이용해보자.

# 구하려는 각 정류장에 버스가 몇 대 지나감?
import sys
sys.stdin = open('my_input.txt','r')
T = int(input())
for testcase in range(1, T+1):
    N = int(input())
    bus_ways = []                                           # 총 버스 댓수와 같이 버스 노선을 담을 리스트 [[],[],[]]
    for i in range(1, N+1):                                 # 각 버스의 노선을 받을 반복문
        bus_way = list(map(int, input().split()))           # 버스 출발지와 종점을 받음
        bus_ways.append(bus_way)                            # 버스 노선을 bus_ways에
# 이제 [[1,3],[2,5]]의 2대의 버스가 있음
    P = int(input())                                        # 구해야할 버스 정류장의 갯수
    C = []                                                  # P개의 정류장에 해당하는 각 정류장 번호를 담는 리스트
    for stop in range(P):                                   # P만큼 입력받아야 하므로
        C_P = int(input())                                  # P에 해당하는 정류장 C를 C_P라 하자(여기서만 사용)
        C.append(C_P)                                       # C 리스트에 입력
    # C = [1,2,3,4,5]
# 이제 각 버스 정류장별 거치는 정류장마다 몇 대의 버스 노선이 거치는지 확인하자.
# bus_ways를 for문 돌리면서 [1,3]에서 1 to 3으로 for문을 돌리고 그 안에서 C에 해당하는 것이 있다면 how_many_bus에서 해당 카운트 +=1

# 버스가 지나가는 버스 정류장을 그대로 구현해볼까?
    bus_ways_stops = []
    for bus in bus_ways:                                    # bus_ways안의 bus가 거치는 모든 정류장을 확인하기 위한 반복문
        for bus_stops in range(bus[0],bus[-1]+1):           # 버스가 지나가는 정류장 모두 풀어서 bus_ways_stops리스트에 넣을것임.
            bus_ways_stops.append(bus_stops)
    # 테스트 케이스 1의 값으로 bus_ways_stops = [1,2,3,2,3,4,5]
    how_many_bus = {}                                       # 딕셔너리에 값을 넣어서 진행하기 위해.
    for i in range(1,5001):
        how_many_bus[i] = 0
    for bus_stop in bus_ways_stops:                         # bus노선이 정차하는 버스 정류장들 리스트의 인자들을 이용해 반복문 실행
        try: how_many_bus[bus_stop] += 1                    # 리스트 내 인덱스를 orders_menu_count에 기입하고 그게 있다면 값에다가 +1을 해준다.
        except: how_many_bus[bus_stop] = 1                  # 리스트 내 인덱스를 orders_menu_count에 기입하고 그게 없다면 값으로 1을 해준다.

    print(f'#{testcase}', end = ' ')
    for stops in C:
        print(f'{how_many_bus[stops]}', end = ' ')
    print()