# [문제]
# 0에서 9까지 숫자가 적힌 N장의 카드가 주어진다.
# 가장 많은 카드에 적힌 숫자와 카드가 몇 장인지 출력하는 프로그램을 만드시오.
# 카드 장수가 같을 때는 적힌 숫자가 큰 쪽을 출력한다.

# [입력]
# 첫 줄에 테스트 케이스 개수 T가 주어진다.  ( 1 ≤ T ≤ 50 )
# 다음 줄부터 테스트케이스의 첫 줄에 카드 장수 N이 주어진다. ( 5 ≤ N ≤ 100 )
# 다음 줄에 N개의 숫자 ai가 여백없이 주어진다. (0으로 시작할 수도 있다.)  ( 0 ≤ ai ≤ 9 ) 

# [출력]
# 각 줄마다 "#T" (T는 테스트 케이스 번호)를 출력한 뒤, 가장 많은 카드의 숫자와 장 수를 차례로 출력한다.

# [입력]
# 3
# 5
# 49679
# 5
# 08271
# 10
# 7797946543

# [출력]
# #1 9 2
# #2 8 1
# #3 7 3


# [문제풀이]
# 1. 0~9의 한자리 숫자가 적힌 N장의 카드가 주어지며 0~9까지 각 자리수마다 여러 장이 있을 수 있다.
# 2. 따라서 각 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 의 각 장 수를 입력받을 수 있는 리스트를 만들어
# 2-1. 리스트[0] = 숫자 0의 장 수 이도록 하면 편리하게 만들 수 있다.
# 3. N개의 숫자 ai가 여백없이 주어지므로 해당 숫자로 받는 문자열을 분리 시켜줄 필요가 있다.
# 4. 각 카드의 장수가 들어있는 리스트를 만들어서 해당 리스트에 각 카드의 장수를 집어넣어준다.
# 5. 반복문을 통해 각 카드의 장수가 가장 많은 인덱스를 찾아내고, 해당 인덱스가 카드의 번호이므로 인덱스, 리스트[인덱스]로 출력한다.

T = int(input())

for testcase in range(1, T+1):                          # 1~T만큼 testcase 반복 실행
    N = int(input())                                    # N 은 카드 장 수
    num_list = list(map(int, input()))                  # 카드에 적혀 있는 숫자들을 리스트화
    card_nums = [0]*10                                  # 인덱스가 총 10개인 리스트
    for i in range(N):                                  # 반복문 범위는 0~(N-1)까지이므로 num_list의 숫자 활용 가능
        card_nums[num_list[i]] += 1                     # num_list[i]에 있는 숫자 예로 6이라면 card_nums[6]에 +1을 한다.
                                                        # 참고로 card_nums = [0,0,0,0,0,0,0,0,0,0]으로 [0]~[9]로 이루어져있다.
    many_num = 0                                        # 추후 이용하기 위해 가장 많은 장수 할당
    solve_num = 0                                       # 추후 이용하기 위해 가장 많은 장수의 카드 번호를 할당
    for j in range(len(card_nums)-1, -1, -1):           # card_nums의 길이인 10에서 j를 인자로 하는 0~9의 반복문을 돌린다. 
                                                        # for j in range(len(card_nums))를 사용하려 했으나 #2 8 1이 나와야 해서 역순 출력했다.
        if card_nums[j] > many_num:                     # 해당 번호의 카드 장 수가 현재까지 나온 가장 많은 장 수 보다 많다면
            many_num = card_nums[j]                     # 해당 번호의 카드 장 수를 가장 많은 장 수로 입력
            solve_num = j
    print(f'#{testcase} {solve_num} {many_num}')