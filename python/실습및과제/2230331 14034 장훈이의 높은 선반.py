import sys
sys.stdin=open('2230331 14034 장훈이의 높은 선반.txt','r')

# [문제]
# 장훈이는 서점을 운영하고 있다.
# 서점에는 높이가 B인 선반이 하나 있는데 장훈이는 키가 매우 크기 때문에, 선반 위의 물건을 자유롭게 사용할 수 있다.
# 어느 날 장훈이는 자리를 비웠고, 이 서점에 있는 N명의 점원들이 장훈이가 선반 위에 올려놓은 물건을 사용해야 하는 일이 생겼다.
# 각 점원의 키는 Hi로 나타나는데, 점원들은 탑을 쌓아서 선반 위의 물건을 사용하기로 하였다.
# 점원들이 쌓는 탑은 점원 1명 이상으로 이루어져 있다.
# 탑의 높이는 점원이 1명일 경우 그 점원의 키와 같고, 2명 이상일 경우 탑을 만든 모든 점원의 키의 합과 같다.
# 탑의 높이가 B 이상인 경우 선반 위의 물건을 사용할 수 있는데 탑의 높이가 높을수록 더 위험하므로 높이가 B 이상인 탑 중에서 높이가 가장 낮은 탑을 알아내려고 한다.

# [입력]
# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
# 각 테스트 케이스의 첫 번째 줄에는 두 정수 N, B(1 ≤ N ≤ 20, 1 ≤ B ≤ S)가 공백으로 구분되어 주어진다.
# S는 두 번째 줄에서 주어지는 점원들 키의 합이다.
# 두 번째 줄에는 N개의 정수가 공백으로 구분되어 주어지며, 각 정수는 각 점원의 키 Hi (1 ≤ Hi ≤ 10,000)을 나타낸다.

# [출력]
# 각 테스트 케이스마다 첫 번째 줄에는 ‘#t’(t는 테스트 케이스 번호를 의미하며 1부터 시작한다)를 출력하고, 만들 수 있는 높이가 B 이상인 탑 중에서 탑의 높이와 B의 차이가 가장 작은 것을 출력한다.

# [예제 풀이]
# 테스트 케이스의 경우 키가 3, 3, 5, 6인 점원이 탑을 만들면 높이가 17(3 + 3 + 5 + 6)이 된다.
# 높이가 16인 탑은 만들 수 없으므로 높이가 17인 탑이 문제에서 구하려는 탑의 높이이다. 따라서 17 – 16 = 1이 답이 된다.

# [문제풀이]
# 0. 높이가 B인 선반이 있다. N명의 점원들이 이 선반을 이용해야한다.
# 0-1. 탑의 높이 1개마다  점원 1명의 높이와 같고, 이 탑의 높이는 쌓을 수록 더 높아진다.
# 0-2. 근데 탑의 높이가 높을수록 위험해서 그냥 선반의 높이인 B보다는 크게 그러나 제일 작게 만들어야하낟.
# 1. 입력값으로 점원수 N, 탑의 높이 B가 먼저주어지고
# 1-1. 그 다음으로 각 점원의 높이(왜이리키가 작아?)가 주어진다.
# 2. 출력은 (가장 작은 탑의 높이-B) 가 되겠다.

def pile_top(server, height):
    global min_height

    if height > min_height:                                 # 가지치기
        return
    if server==N+1:                                         # 점원 다 조사 했냐?
        # if height >= B:
        #     min_height = min(min_height,height)
        if height >= B:                                     # 그러면 탑 높이가 B보다 크거나 같으면
            min_height = height                             # height를 min_height로 변경해.(가지쳐서 이렇게 가능)
        return
    # 직원 키 더하기
    pile_top(server+1, height+h_list[server+1])             # 직원키 더하니까 height+h_list[server+1]
    # 직원 키 안 더하기
    pile_top(server+1, height)                              # 직원키 안더하니까 height
    return

T = int(input())
for testcase in range(1, T+1):
    N, B = map(int, input().split())                        # 점원 수 N과 장훈이의 선반 B를 입력받음
    h_list = [0]+list(map(int, input().split()))+[0]        # 가기 점원의 키...(진짜 작네)(index 터지는거 방지)

    min_height = 10000*N                                    # 제일 작을 키에 대입될 min_height생성
    pile_top(0, 0)                                          # 함수 실행
    print(f'#{testcase} {min_height-B}')