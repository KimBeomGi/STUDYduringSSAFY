# 얘는 재귀로 풀면
# 어린이 알고리즘 교실의 선생님은 경우의 수 놀이를 위해, 그림처럼 가로x세로 길이가 10x20, 20x20인 직사각형 종이를 잔뜩 준비했다.
# 그리고 교실 바닥에 20xN 크기의 직사각형을 테이프로 표시하고, 이 안에 준비한 종이를 빈틈없이 붙이는 방법을 찾아보려고 한다. N이 30인 경우 다음 그림처럼 종이를 붙일 수 있다.
# 10의 배수인 N이 주어졌을 때, 종이를 붙이는 모든 경우를 찾으려면 테이프로 만든 표시한 영역을 몇 개나 만들어야 되는지 계산하는 프로그램을 만드시오. 직사각형 종이가 모자라는 경우는 없다.
# [입력]
# 첫 줄에 테스트 케이스 개수 T가 주어진다.  1≤T≤50
# 다음 줄부터 테스트 케이스 별로 N이 주어진다. 10≤N≤300, N은 10의 배수

# [출력]
# 각 줄마다 "#T" (T는 테스트 케이스 번호)를 출력한 뒤, 답을 출력한다.
import sys
sys.stdin = open('230214 4일차-종이붙이기.txt', 'r')
# [문제풀이]
# 0. 입력값으로 세로20 가로N인 사각형 N 즉, 가로 길이를 입력받는다.N은 10의 배수이다.
# 0-1. 이 가로길이에 따라 만들 수 있는 사각형의 갯수가 달라진다.
# 0-2. 20 10, 20 20 의 사각형을 이용해서만 제작이 가능하다.
# 1. 출력값은 20 by 10, 20 by 20의 사각형을 이용해 20 by N의 사각형을 몇개나 만들 수 있냐가 되겠다.
# 2. (20,10) 의 경우 1개, (20,20)의 경우 3개, (20,30)의 경우 5개, (20,40)의 경우 11개, (20, 50)의 경우 21개
# 3. (20,10)-> (20,20)의 갯수는 X2 +1, (20,20)-> (20,30)의 갯수는 X2-1, (20,30) -> (20,40)의 갯수는 X2+1이다.
# 4. 재귀함수를 이용해 이를 구현해보자.


def make_rect(N):                           # 사각형 제작해서 만들수 있는 갯수를 제시하는 함수
    if N == 10:                             # N은 10이 최솟값이므로 N = 10이면
        return 1                            # 종착지에서 1개를 반환
    elif N%20 == 10:                        # 10, 30, 50과 같은 10의 자리 수가 홀수이면
        return make_rect(N-10)*2-1          # 짝수에서 홀수로 넘어갈때 갯수가 *2 -1이 된다.
    elif N%20 == 0:                         # 20, 40, 60과 같은 10의 자리 수가 짝수이면
        return make_rect(N-10)*2+1          # 짝수에서 홀수로 넘어갈때 갯수가 *2 -1이 된다. 

T = int(input())
for testcase in range(1, T+1):
    N = int(input())                        # 제작할 사각형의 가로길이 N
    print(f'#{testcase} {make_rect(N)}')