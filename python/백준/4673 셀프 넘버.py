# 문제
# 셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.

# 양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다. 

# 예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 이런식으로 다음과 같은 수열을 만들 수 있다.

# 33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...

# n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 예를 들어, 101은 생성자가 2개(91과 100) 있다. 

# 생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97

# 10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.

# 입력
# 입력은 없다.

# 출력
# 10,000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 증가하는 순서로 출력한다.

# 문제풀이
# 1. n인 자기 자신과 각 자리 수를 더하여 만들어진 값을 d(n)의 값이라하고 n을 d(n)의 값의 생성자라고 하자.
# 2. 예시로 11은 10의 생성자가 되기에 11은 셀프 넘버가 될 수 없다.
# 3. 0~ 10000의 인덱스가 있는 리스트를 만들고 해당 번호에 생성자가 있으면 해당 인덱스 값에 +1해주자.

a = [0]*10036   # 0~10000까지하고 싶지만 최대인 9999가 만들어낼 수 있는 값은 10035니까
for i in range(1, 10001):
    # 각 자리수를 더하는 방법을 이용해서 풀어보자.
    val = i
    while i > 0:
        digit = i % 10
        val += digit
        i = i // 10
    a[val] += 1

# 생성자 여부를 확인했으니 셀프넘버인 것만 뽑아내자.
for i in range(1, 10001):
    if not a[i]:
        print(i)