# # 문제
# # 신종 바이러스인 웜 바이러스는 네트워크를 통해 전파된다. 한 컴퓨터가 웜 바이러스에 걸리면 그 컴퓨터와 네트워크 상에서 연결되어 있는 모든 컴퓨터는 웜 바이러스에 걸리게 된다.

# # 예를 들어 7대의 컴퓨터가 <그림 1>과 같이 네트워크 상에서 연결되어 있다고 하자. 1번 컴퓨터가 웜 바이러스에 걸리면 웜 바이러스는 2번과 5번 컴퓨터를 거쳐 3번과 6번 컴퓨터까지 전파되어 2, 3, 5, 6 네 대의 컴퓨터는 웜 바이러스에 걸리게 된다. 하지만 4번과 7번 컴퓨터는 1번 컴퓨터와 네트워크상에서 연결되어 있지 않기 때문에 영향을 받지 않는다.



# # 어느 날 1번 컴퓨터가 웜 바이러스에 걸렸다. 컴퓨터의 수와 네트워크 상에서 서로 연결되어 있는 정보가 주어질 때, 1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 출력하는 프로그램을 작성하시오.

# # 입력
# # 첫째 줄에는 컴퓨터의 수가 주어진다. 컴퓨터의 수는 100 이하인 양의 정수이고 각 컴퓨터에는 1번 부터 차례대로 번호가 매겨진다. 둘째 줄에는 네트워크 상에서 직접 연결되어 있는 컴퓨터 쌍의 수가 주어진다. 이어서 그 수만큼 한 줄에 한 쌍씩 네트워크 상에서 직접 연결되어 있는 컴퓨터의 번호 쌍이 주어진다.

# # 출력
# # 1번 컴퓨터가 웜 바이러스에 걸렸을 때, 1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 첫째 줄에 출력한다.


# 입력값
# 7
# 6
# 1 2
# 2 3
# 1 5
# 5 2
# 5 6
# 4 7

# 출력값
# 4

# 문제풀이

# 깊이 우선 탐색(dfs)으로 확인
def dfs(matrix, start, visited):
    visited[start] = True
    count = 0
    for node in range(1, len(matrix)):
        if matrix[start][node] == 1 and not visited[node]:
            count += dfs(matrix, node, visited)
    return count + 1

# 초기 입력 받아주기
N = int(input())    # 총 컴퓨터 댓수
M = int(input())    # 연결된 간선 수
matrix = [[0]*(N+1) for _ in range(N+1)]        # 이렇게 하면 인덱스 0~7까지가 생기며, 8 by 8의 행렬이 생성됨

# 행렬을 만들어서 표처럼 볼 수 있도록 해주기
for _ in range(M):
    a, b = map(int, input().split())
    # 양방향 통신이므로 [a][b] 와 [b][a] 둘다 True
    matrix[a][b] = 1
    matrix[b][a] = 1
# print(matrix)

visited = [False]*(N+1)                         # 0~7까지의 인덱스를 False로 만들고 visited로 만들어주기.
# print(visited)
answer = dfs(matrix, 1, visited) - 1
print(answer)