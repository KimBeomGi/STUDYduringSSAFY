# 문제
# 45656이란 수를 보자.

# 이 수는 인접한 모든 자리의 차이가 1이다. 이런 수를 계단 수라고 한다.

# N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구해보자. 0으로 시작하는 수는 계단수가 아니다.

# 입력
# 첫째 줄에 N이 주어진다. N은 1보다 크거나 같고, 100보다 작거나 같은 자연수이다.

# 출력
# 첫째 줄에 정답을 1,000,000,000으로 나눈 나머지를 출력한다.

# 입력값
# 1

# 출력값
# 9

# 입력값
# 2

# 출력값
# 17

import sys

N = int(sys.stdin.readline())        # N은 길이 즉 몇단위의 자리인지를 말함
dp = [[0]*10  for _ in range(N+1)] # 0~9까지는 ahen 10개이고 그것을 0~N까지 만들엇음.
for i in range(1,10):               # i를 1~9까지만 이용해줌(0으로 시작하진 않으니까)
    dp[1][i] = 1

for i in range(2, N+1):             # 맨 앞자리 이외의 것에 대해서 확인하기 위함
    for j in range(10):             # 0~9까지의 숫자 모두 사용
        if j == 0:                  # 0이 걸리면 다음 숫자든 앞에 숫자든 1일 수 밖에 없음
            dp[i][j] = dp[i-1][1]   # 따라서 [i][j]의 값은 [i-1][1] 값과 같음
        elif j == 9:                # 9가 걸리면 다음 숫자든 앞에 숫자든 8일 수 밖에 없음
            dp[i][j] = dp[i-1][8]   # 따라서 [i][j]의 값은 [i-1][1] 값과 같음
        else:                       # 그 외는 예로 4면 뒤의 숫자가 3이나 5가 될 수도 있으니 2가지 가능성을 더해줘야함
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]

print(sum(dp[N]) % 1000000000) 