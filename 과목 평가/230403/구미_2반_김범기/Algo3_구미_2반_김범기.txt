복잡도
문제(1) Big-O 표기법의 의미에 대해 간단히 설명하시오
----
시간 복잡도를 나타내기 위한 표기법 중 하나이다.
빅오로 표기하는 방법으로 만약 N**2+M*123+K 와 같은 시간복잡도를 가지는 코드가 있다면,
가장 큰 복잡도를 보이는 N**2만 남기고 기록하여 이를 간단하게 O(N**2)과 같이 표기하는 방식이다.

참고로 흔히 알고있는 정렬방법인 선택정렬이 O(N**2)의 시간 복잡도를 가지고 있으며,
퀵 정렬의 경우 O(NlogN)의 복잡도이다.(최악의 경우 O(N**2))

문제(2) 함수f(n)의 계산량 T(n)이다음과같이표시된다고한다.
T(n) = T(n-1) + 1, T(0) = 1
f(n)의 시간 복잡도를 n에 대한 big-O 표기법으로 표시하고,
이를구하는과정을수식으로나타내시오.
----
함수 f(n)의 계산량이 T(n)이다.
T(n) = T(n-1) +1 이며, T(0) = 1이다.
따라서 이는 T(0) =1, T(1) =2, T(3)=3,...이 되는 형태이다.

이 계산량을 보게되면
이 코드는 계산도 곱하는 것 없이 더하기만 존재하며, 반복문도 없기 때문에
O(N)의 시간 복잡도를 가지게 된다.(사실상 이 코드가 한 번의 반복문과 같은 시간 복잡도이다.)